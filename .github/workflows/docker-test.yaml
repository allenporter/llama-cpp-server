name: Container Test

on:
  push:
    branches:
      - main
  pull_request:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    if: ${{ github.event.pull_request.head.repo.full_name == 'allenporter/llama-cpp-server' || github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      matrix:
        image:
          - context: .
            image: ${{ env.IMAGE_NAME }}-simple
            dockerfile: Dockerfile.simple
          - context: .
            image: ${{ env.IMAGE_NAME }}-cuda
            dockerfile: Dockerfile.cuda
          - context: .
            image: ${{ env.IMAGE_NAME }}-cublas
            dockerfile: Dockerfile.cublas
          - context: model-fetch
            image: ${{ env.IMAGE_NAME }}-model-fetch
            dockerfile: Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          push: true
          file: ${{ matrix.image.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
