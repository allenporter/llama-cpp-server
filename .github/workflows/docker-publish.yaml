name: Container Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      matrix:
        image:
        # github.repository as <account>/<repo>
        - context: .
          image: ${{ github.repository }}-cuda
          dockerfile: Dockerfile.cuda
        - context: .
          image: ${{ github.repository }}-functionary-v2.5
          dockerfile: Dockerfile.functionary-v2.5
        - context: .
          image: ${{ github.repository }}-cpu
          dockerfile: Dockerfile.cpu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ matrix.image.image }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: ${{ matrix.image.context }}
        push: true
        file: ${{ matrix.image.dockerfile }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ matrix.image.image }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
